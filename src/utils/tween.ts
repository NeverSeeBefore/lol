/* eslint-disable no-return-assign */
/* eslint-disable no-cond-assign */

// 缓动函数
// https://www.cnblogs.com/brainworld/p/7240564.html
export const tween = {
  easeInQuad(pos: number) {
    return pos ** 2;
  },

  easeOutQuad(pos: number) {
    return -((pos - 1) ** 2 - 1);
  },

  easeInOutQuad(pos: number) {
    if ((pos /= 0.5) < 1) return 0.5 * pos ** 2;
    return -0.5 * ((pos -= 2) * pos - 2);
  },

  easeInCubic(pos: number) {
    return pos ** 3;
  },

  easeOutCubic(pos: number) {
    return (pos - 1) ** 3 + 1;
  },

  easeInOutCubic(pos: number) {
    if ((pos /= 0.5) < 1) return 0.5 * pos ** 3;
    return 0.5 * ((pos - 2) ** 3 + 2);
  },

  easeInQuart(pos: number) {
    return pos ** 4;
  },

  easeOutQuart(pos: number) {
    return -((pos - 1) ** 4 - 1);
  },

  easeInOutQuart(pos: number) {
    if ((pos /= 0.5) < 1) return 0.5 * pos ** 4;
    return -0.5 * ((pos -= 2) * pos ** 3 - 2);
  },

  easeInQuint(pos: number) {
    return pos ** 5;
  },

  easeOutQuint(pos: number) {
    return (pos - 1) ** 5 + 1;
  },

  easeInOutQuint(pos: number) {
    if ((pos /= 0.5) < 1) return 0.5 * pos ** 5;
    return 0.5 * ((pos - 2) ** 5 + 2);
  },

  easeInSine(pos: number) {
    return -Math.cos(pos * (Math.PI / 2)) + 1;
  },

  easeOutSine(pos: number) {
    return Math.sin(pos * (Math.PI / 2));
  },

  easeInOutSine(pos: number) {
    return -0.5 * (Math.cos(Math.PI * pos) - 1);
  },

  easeInExpo(pos: number) {
    return pos === 0 ? 0 : 2 ** (10 * (pos - 1));
  },

  easeOutExpo(pos: number) {
    return pos === 1 ? 1 : -(2 ** (-10 * pos)) + 1;
  },

  easeInOutExpo(pos: number) {
    if (pos === 0) return 0;
    if (pos === 1) return 1;
    if ((pos /= 0.5) < 1) return 0.5 * 2 ** (10 * (pos - 1));
    return 0.5 * (-(2 ** (-10 * --pos)) + 2);
  },

  easeInCirc(pos: number) {
    return -(Math.sqrt(1 - pos * pos) - 1);
  },

  easeOutCirc(pos: number) {
    return Math.sqrt(1 - (pos - 1) ** 2);
  },

  easeInOutCirc(pos: number) {
    if ((pos /= 0.5) < 1) return -0.5 * (Math.sqrt(1 - pos * pos) - 1);
    return 0.5 * (Math.sqrt(1 - (pos -= 2) * pos) + 1);
  },

  easeOutBounce(pos: number) {
    if (pos < 1 / 2.75) {
      return 7.5625 * pos * pos;
    }
    if (pos < 2 / 2.75) {
      return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    }
    if (pos < 2.5 / 2.75) {
      return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    }
    return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984_375;
  },

  easeInBack(pos: number) {
    const s = 1.701_58;
    return pos * pos * ((s + 1) * pos - s);
  },

  easeOutBack(pos: number) {
    const s = 1.701_58;
    return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
  },

  easeInOutBack(pos: number) {
    let s = 1.701_58;
    if ((pos /= 0.5) < 1) return 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s));
    return 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
  },

  elastic(pos: number) {
    return -1 * 4 ** (-8 * pos) * Math.sin(((pos * 6 - 1) * (2 * Math.PI)) / 2) + 1;
  },

  swingFromTo(pos: number) {
    let s = 1.701_58;
    return (pos /= 0.5) < 1
      ? 0.5 * (pos * pos * (((s *= 1.525) + 1) * pos - s))
      : 0.5 * ((pos -= 2) * pos * (((s *= 1.525) + 1) * pos + s) + 2);
  },

  swingFrom(pos: number) {
    const s = 1.701_58;
    return pos * pos * ((s + 1) * pos - s);
  },

  swingTo(pos: number) {
    const s = 1.701_58;
    return (pos -= 1) * pos * ((s + 1) * pos + s) + 1;
  },

  bounce(pos: number) {
    if (pos < 1 / 2.75) {
      return 7.5625 * pos * pos;
    }
    if (pos < 2 / 2.75) {
      return 7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75;
    }
    if (pos < 2.5 / 2.75) {
      return 7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375;
    }
    return 7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984_375;
  },

  bouncePast(pos: number) {
    if (pos < 1 / 2.75) {
      return 7.5625 * pos * pos;
    }
    if (pos < 2 / 2.75) {
      return 2 - (7.5625 * (pos -= 1.5 / 2.75) * pos + 0.75);
    }
    if (pos < 2.5 / 2.75) {
      return 2 - (7.5625 * (pos -= 2.25 / 2.75) * pos + 0.9375);
    }
    return 2 - (7.5625 * (pos -= 2.625 / 2.75) * pos + 0.984_375);
  },

  easeFromTo(pos: number) {
    if ((pos /= 0.5) < 1) return 0.5 * pos ** 4;
    return -0.5 * ((pos -= 2) * pos ** 3 - 2);
  },

  easeFrom(pos: number) {
    return pos ** 4;
  },

  easeTo(pos: number) {
    return pos ** 0.25;
  },

  linear(pos: number) {
    return pos;
  },

  sinusoidal(pos: number) {
    return -Math.cos(pos * Math.PI) / 2 + 0.5;
  },

  reverse(pos: number) {
    return 1 - pos;
  },

  mirror(pos: number, transition?: (key: number) => number) {
    transition = transition || tween.sinusoidal;
    return pos < 0.5 ? transition(pos * 2) : transition(1 - (pos - 0.5) * 2);
  },

  flicker(pos: number) {
    pos += (Math.random() - 0.5) / 5;
    return tween.sinusoidal(pos < 0 ? 0 : pos > 1 ? 1 : pos);
  },

  wobble(pos: number) {
    return -Math.cos(pos * Math.PI * (9 * pos)) / 2 + 0.5;
  },

  pulse(pos: number, pulses?: number) {
    return -Math.cos(pos * ((pulses || 5) - 0.5) * 2 * Math.PI) / 2 + 0.5;
  },

  blink(pos: number, blinks?: number) {
    return Math.round(pos * (blinks || 5)) % 2;
  },

  spring(pos: number) {
    return 1 - Math.cos(pos * 4.5 * Math.PI) * Math.exp(-pos * 6);
  },

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  none(pos: number) {
    return 0;
  },

  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  full(pos: number) {
    return 1;
  },
};

export const tweenDotObjDemo = {
  easeInQuad: [
    0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.05,
    0.05, 0.06, 0.06, 0.07, 0.07, 0.08, 0.08, 0.09, 0.1, 0.1, 0.11, 0.12, 0.12, 0.13, 0.14, 0.14, 0.15, 0.16, 0.17,
    0.18, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.34, 0.35, 0.36,
    0.37, 0.38, 0.4, 0.41, 0.42, 0.44, 0.45, 0.46, 0.48, 0.49, 0.5, 0.52, 0.53, 0.55, 0.56, 0.58, 0.59, 0.61, 0.62,
    0.64, 0.66, 0.67, 0.69, 0.71, 0.72, 0.74, 0.76, 0.77, 0.79, 0.81, 0.83, 0.85, 0.86, 0.88, 0.9, 0.92, 0.94, 0.96,
    0.98, 1,
  ],
  easeOutQuad: [
    0, 0.02, 0.04, 0.06, 0.08, 0.1, 0.12, 0.14, 0.15, 0.17, 0.19, 0.21, 0.23, 0.24, 0.26, 0.28, 0.29, 0.31, 0.33, 0.34,
    0.36, 0.38, 0.39, 0.41, 0.42, 0.44, 0.45, 0.47, 0.48, 0.5, 0.51, 0.52, 0.54, 0.55, 0.56, 0.58, 0.59, 0.6, 0.62,
    0.63, 0.64, 0.65, 0.66, 0.68, 0.69, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.79, 0.8, 0.81, 0.82,
    0.82, 0.83, 0.84, 0.85, 0.86, 0.86, 0.87, 0.88, 0.88, 0.89, 0.9, 0.9, 0.91, 0.92, 0.92, 0.93, 0.93, 0.94, 0.94,
    0.95, 0.95, 0.96, 0.96, 0.96, 0.97, 0.97, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1,
    1,
  ],
  easeInOutQuad: [
    0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04, 0.04, 0.05, 0.06, 0.06, 0.07, 0.08, 0.09,
    0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.22, 0.23, 0.24, 0.26, 0.27, 0.29, 0.3, 0.32, 0.34,
    0.35, 0.37, 0.39, 0.41, 0.42, 0.44, 0.46, 0.48, 0.5, 0.52, 0.54, 0.56, 0.58, 0.6, 0.61, 0.63, 0.65, 0.66, 0.68, 0.7,
    0.71, 0.73, 0.74, 0.76, 0.77, 0.78, 0.8, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.88, 0.88, 0.89, 0.9, 0.91, 0.92,
    0.93, 0.94, 0.94, 0.95, 0.95, 0.96, 0.97, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1,
  ],
  easeInCubic: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02,
    0.02, 0.02, 0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.05, 0.05, 0.05, 0.06, 0.06, 0.07, 0.07, 0.08, 0.09, 0.09, 0.1,
    0.1, 0.11, 0.12, 0.13, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27,
    0.29, 0.3, 0.31, 0.33, 0.34, 0.36, 0.37, 0.39, 0.41, 0.42, 0.44, 0.46, 0.47, 0.49, 0.51, 0.53, 0.55, 0.57, 0.59,
    0.61, 0.64, 0.66, 0.68, 0.7, 0.73, 0.75, 0.78, 0.8, 0.83, 0.86, 0.88, 0.91, 0.94, 0.97, 1,
  ],
  easeOutCubic: [
    0, 0.03, 0.06, 0.09, 0.12, 0.14, 0.17, 0.2, 0.22, 0.25, 0.27, 0.3, 0.32, 0.34, 0.36, 0.39, 0.41, 0.43, 0.45, 0.47,
    0.49, 0.51, 0.53, 0.54, 0.56, 0.58, 0.59, 0.61, 0.63, 0.64, 0.66, 0.67, 0.69, 0.7, 0.71, 0.73, 0.74, 0.75, 0.76,
    0.77, 0.78, 0.79, 0.8, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.88, 0.89, 0.9, 0.9, 0.91, 0.91, 0.92, 0.93,
    0.93, 0.94, 0.94, 0.95, 0.95, 0.95, 0.96, 0.96, 0.96, 0.97, 0.97, 0.97, 0.98, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99,
    0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInOutCubic: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04, 0.04, 0.05, 0.06,
    0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.16, 0.17, 0.19, 0.2, 0.22, 0.24, 0.26, 0.28, 0.3, 0.32, 0.34,
    0.36, 0.39, 0.42, 0.44, 0.47, 0.5, 0.53, 0.56, 0.58, 0.61, 0.64, 0.66, 0.68, 0.7, 0.72, 0.74, 0.76, 0.78, 0.8, 0.81,
    0.83, 0.84, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91, 0.92, 0.93, 0.94, 0.94, 0.95, 0.96, 0.96, 0.97, 0.97, 0.98, 0.98,
    0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInQuart: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
    0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.05, 0.05, 0.06, 0.06, 0.07,
    0.07, 0.08, 0.09, 0.09, 0.1, 0.11, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.23, 0.24,
    0.25, 0.27, 0.28, 0.3, 0.32, 0.33, 0.35, 0.37, 0.39, 0.41, 0.43, 0.45, 0.47, 0.5, 0.52, 0.55, 0.57, 0.6, 0.63, 0.66,
    0.69, 0.72, 0.75, 0.78, 0.81, 0.85, 0.89, 0.92, 0.96, 1,
  ],
  easeOutQuart: [
    0, 0.04, 0.08, 0.11, 0.15, 0.19, 0.22, 0.25, 0.28, 0.31, 0.34, 0.37, 0.4, 0.43, 0.45, 0.48, 0.5, 0.53, 0.55, 0.57,
    0.59, 0.61, 0.63, 0.65, 0.67, 0.68, 0.7, 0.72, 0.73, 0.75, 0.76, 0.77, 0.79, 0.8, 0.81, 0.82, 0.83, 0.84, 0.85,
    0.86, 0.87, 0.88, 0.89, 0.89, 0.9, 0.91, 0.91, 0.92, 0.93, 0.93, 0.94, 0.94, 0.95, 0.95, 0.96, 0.96, 0.96, 0.97,
    0.97, 0.97, 0.97, 0.98, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInOutQuart: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04,
    0.04, 0.05, 0.06, 0.06, 0.07, 0.08, 0.09, 0.11, 0.12, 0.13, 0.15, 0.17, 0.19, 0.2, 0.23, 0.25, 0.27, 0.3, 0.33,
    0.36, 0.39, 0.42, 0.46, 0.5, 0.54, 0.58, 0.61, 0.64, 0.67, 0.7, 0.73, 0.75, 0.77, 0.8, 0.81, 0.83, 0.85, 0.87, 0.88,
    0.89, 0.91, 0.92, 0.93, 0.94, 0.94, 0.95, 0.96, 0.96, 0.97, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInQuint: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01,
    0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.03, 0.04, 0.04, 0.05, 0.05,
    0.06, 0.06, 0.07, 0.07, 0.08, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.21, 0.22,
    0.24, 0.25, 0.27, 0.29, 0.31, 0.33, 0.35, 0.37, 0.39, 0.42, 0.44, 0.47, 0.5, 0.53, 0.56, 0.59, 0.62, 0.66, 0.7,
    0.73, 0.77, 0.82, 0.86, 0.9, 0.95, 1,
  ],
  easeOutQuint: [
    0, 0.05, 0.1, 0.14, 0.18, 0.23, 0.27, 0.3, 0.34, 0.38, 0.41, 0.44, 0.47, 0.5, 0.53, 0.56, 0.58, 0.61, 0.63, 0.65,
    0.67, 0.69, 0.71, 0.73, 0.75, 0.76, 0.78, 0.79, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91,
    0.92, 0.92, 0.93, 0.93, 0.94, 0.94, 0.95, 0.95, 0.96, 0.96, 0.97, 0.97, 0.97, 0.97, 0.98, 0.98, 0.98, 0.98, 0.99,
    0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInOutQuint: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03,
    0.03, 0.04, 0.05, 0.05, 0.06, 0.07, 0.08, 0.1, 0.11, 0.13, 0.14, 0.16, 0.19, 0.21, 0.24, 0.26, 0.3, 0.33, 0.37,
    0.41, 0.45, 0.5, 0.55, 0.59, 0.63, 0.67, 0.7, 0.74, 0.76, 0.79, 0.81, 0.84, 0.86, 0.87, 0.89, 0.9, 0.92, 0.93, 0.94,
    0.95, 0.95, 0.96, 0.97, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1,
  ],
  easeInSine: [
    0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04, 0.04, 0.04, 0.05, 0.05, 0.06,
    0.06, 0.07, 0.08, 0.08, 0.09, 0.1, 0.1, 0.11, 0.12, 0.12, 0.13, 0.14, 0.15, 0.16, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21,
    0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.39, 0.4, 0.41, 0.42,
    0.44, 0.45, 0.46, 0.48, 0.49, 0.5, 0.52, 0.53, 0.55, 0.56, 0.57, 0.59, 0.6, 0.62, 0.63, 0.65, 0.66, 0.68, 0.69,
    0.71, 0.72, 0.74, 0.75, 0.77, 0.78, 0.8, 0.81, 0.83, 0.84, 0.86, 0.87, 0.89, 0.91, 0.92, 0.94, 0.95, 0.97, 0.98, 1,
  ],
  easeOutSine: [
    0, 0.02, 0.03, 0.05, 0.06, 0.08, 0.09, 0.11, 0.13, 0.14, 0.16, 0.17, 0.19, 0.2, 0.22, 0.23, 0.25, 0.26, 0.28, 0.29,
    0.31, 0.32, 0.34, 0.35, 0.37, 0.38, 0.4, 0.41, 0.43, 0.44, 0.45, 0.47, 0.48, 0.5, 0.51, 0.52, 0.54, 0.55, 0.56,
    0.58, 0.59, 0.6, 0.61, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78,
    0.79, 0.8, 0.81, 0.82, 0.83, 0.84, 0.84, 0.85, 0.86, 0.87, 0.88, 0.88, 0.89, 0.9, 0.9, 0.91, 0.92, 0.92, 0.93, 0.94,
    0.94, 0.95, 0.95, 0.96, 0.96, 0.96, 0.97, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInOutSine: [
    0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.04, 0.04, 0.05, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.1,
    0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.21, 0.22, 0.23, 0.25, 0.26, 0.27, 0.29, 0.3, 0.32, 0.33, 0.35,
    0.36, 0.38, 0.39, 0.41, 0.42, 0.44, 0.45, 0.47, 0.48, 0.5, 0.52, 0.53, 0.55, 0.56, 0.58, 0.59, 0.61, 0.62, 0.64,
    0.65, 0.67, 0.68, 0.7, 0.71, 0.73, 0.74, 0.75, 0.77, 0.78, 0.79, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.88, 0.89,
    0.9, 0.9, 0.91, 0.92, 0.93, 0.94, 0.95, 0.95, 0.96, 0.96, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1,
  ],
  easeInExpo: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
    0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03,
    0.03, 0.03, 0.04, 0.04, 0.04, 0.04, 0.05, 0.05, 0.05, 0.06, 0.06, 0.07, 0.07, 0.08, 0.08, 0.09, 0.09, 0.1, 0.11,
    0.12, 0.12, 0.13, 0.14, 0.15, 0.16, 0.18, 0.19, 0.2, 0.22, 0.23, 0.25, 0.27, 0.29, 0.31, 0.33, 0.35, 0.38, 0.41,
    0.44, 0.47, 0.5, 0.54, 0.57, 0.62, 0.66, 0.71, 0.76, 0.81, 0.87, 0.93, 1,
  ],
  easeOutExpo: [
    0, 0.07, 0.13, 0.19, 0.24, 0.29, 0.34, 0.38, 0.43, 0.46, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.67, 0.69, 0.71, 0.73,
    0.75, 0.77, 0.78, 0.8, 0.81, 0.82, 0.84, 0.85, 0.86, 0.87, 0.88, 0.88, 0.89, 0.9, 0.91, 0.91, 0.92, 0.92, 0.93,
    0.93, 0.94, 0.94, 0.95, 0.95, 0.95, 0.96, 0.96, 0.96, 0.96, 0.97, 0.97, 0.97, 0.97, 0.97, 0.98, 0.98, 0.98, 0.98,
    0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInOutExpo: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02,
    0.02, 0.03, 0.03, 0.04, 0.04, 0.05, 0.05, 0.06, 0.07, 0.08, 0.09, 0.11, 0.13, 0.14, 0.16, 0.19, 0.22, 0.25, 0.29,
    0.33, 0.38, 0.44, 0.5, 0.56, 0.62, 0.67, 0.71, 0.75, 0.78, 0.81, 0.84, 0.86, 0.88, 0.89, 0.91, 0.92, 0.93, 0.94,
    0.95, 0.95, 0.96, 0.96, 0.97, 0.97, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInCirc: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03,
    0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.05, 0.05, 0.05, 0.06, 0.06, 0.06, 0.07, 0.07, 0.08, 0.08, 0.08, 0.09, 0.09,
    0.1, 0.1, 0.11, 0.11, 0.12, 0.12, 0.13, 0.13, 0.14, 0.15, 0.15, 0.16, 0.16, 0.17, 0.18, 0.19, 0.19, 0.2, 0.21, 0.22,
    0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.39, 0.4, 0.41,
    0.43, 0.44, 0.46, 0.47, 0.49, 0.51, 0.53, 0.54, 0.56, 0.59, 0.61, 0.63, 0.66, 0.69, 0.72, 0.76, 0.8, 0.86, 1,
  ],
  easeOutCirc: [
    0, 0.14, 0.2, 0.24, 0.28, 0.31, 0.34, 0.37, 0.39, 0.41, 0.44, 0.46, 0.47, 0.49, 0.51, 0.53, 0.54, 0.56, 0.57, 0.59,
    0.6, 0.61, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76, 0.77, 0.78, 0.78,
    0.79, 0.8, 0.81, 0.81, 0.82, 0.83, 0.84, 0.84, 0.85, 0.85, 0.86, 0.87, 0.87, 0.88, 0.88, 0.89, 0.89, 0.9, 0.9, 0.91,
    0.91, 0.92, 0.92, 0.92, 0.93, 0.93, 0.94, 0.94, 0.94, 0.95, 0.95, 0.95, 0.96, 0.96, 0.96, 0.97, 0.97, 0.97, 0.97,
    0.98, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeInOutCirc: [
    0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.04, 0.04, 0.05, 0.05,
    0.06, 0.06, 0.07, 0.07, 0.08, 0.09, 0.09, 0.1, 0.11, 0.12, 0.12, 0.13, 0.14, 0.15, 0.16, 0.18, 0.19, 0.2, 0.21,
    0.23, 0.24, 0.26, 0.28, 0.3, 0.33, 0.36, 0.4, 0.5, 0.6, 0.64, 0.67, 0.7, 0.72, 0.74, 0.76, 0.77, 0.79, 0.8, 0.81,
    0.82, 0.84, 0.85, 0.86, 0.87, 0.88, 0.88, 0.89, 0.9, 0.91, 0.91, 0.92, 0.93, 0.93, 0.94, 0.94, 0.95, 0.95, 0.96,
    0.96, 0.97, 0.97, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeOutBounce: [
    0, 0, 0, 0.01, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08, 0.09, 0.11, 0.13, 0.15, 0.17, 0.19, 0.22, 0.25, 0.27, 0.3,
    0.33, 0.37, 0.4, 0.44, 0.47, 0.51, 0.55, 0.59, 0.64, 0.68, 0.73, 0.77, 0.82, 0.87, 0.93, 0.98, 0.98, 0.96, 0.93,
    0.91, 0.89, 0.87, 0.85, 0.83, 0.82, 0.81, 0.79, 0.78, 0.77, 0.77, 0.76, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.76,
    0.77, 0.77, 0.78, 0.79, 0.8, 0.82, 0.83, 0.85, 0.87, 0.89, 0.91, 0.93, 0.95, 0.98, 1, 0.98, 0.97, 0.96, 0.96, 0.95,
    0.94, 0.94, 0.94, 0.94, 0.94, 0.94, 0.95, 0.95, 0.96, 0.97, 0.98, 0.99, 1, 0.99, 0.99, 0.99, 0.98, 0.98, 0.99, 0.99,
    0.99, 1,
  ],
  easeInBack: [
    0, 0, 0, 0, 0, 0, -0.01, -0.01, -0.01, -0.01, -0.01, -0.02, -0.02, -0.02, -0.03, -0.03, -0.03, -0.04, -0.04, -0.04,
    -0.05, -0.05, -0.05, -0.06, -0.06, -0.06, -0.07, -0.07, -0.07, -0.08, -0.08, -0.08, -0.09, -0.09, -0.09, -0.09,
    -0.09, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.09, -0.09, -0.09, -0.08, -0.08, -0.08,
    -0.07, -0.07, -0.06, -0.05, -0.05, -0.04, -0.03, -0.02, -0.01, 0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.08, 0.09, 0.11,
    0.13, 0.14, 0.16, 0.18, 0.2, 0.22, 0.25, 0.27, 0.29, 0.32, 0.35, 0.37, 0.4, 0.43, 0.46, 0.49, 0.52, 0.56, 0.59,
    0.63, 0.66, 0.7, 0.74, 0.78, 0.82, 0.86, 0.91, 0.95, 1,
  ],
  easeOutBack: [
    0, 0.05, 0.09, 0.14, 0.18, 0.22, 0.26, 0.3, 0.34, 0.37, 0.41, 0.44, 0.48, 0.51, 0.54, 0.57, 0.6, 0.63, 0.65, 0.68,
    0.71, 0.73, 0.75, 0.78, 0.8, 0.82, 0.84, 0.86, 0.87, 0.89, 0.91, 0.92, 0.94, 0.95, 0.96, 0.98, 0.99, 1, 1.01, 1.02,
    1.03, 1.04, 1.05, 1.05, 1.06, 1.07, 1.07, 1.08, 1.08, 1.08, 1.09, 1.09, 1.09, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1,
    1.1, 1.1, 1.1, 1.1, 1.09, 1.09, 1.09, 1.09, 1.09, 1.08, 1.08, 1.08, 1.07, 1.07, 1.07, 1.06, 1.06, 1.06, 1.05, 1.05,
    1.05, 1.04, 1.04, 1.04, 1.03, 1.03, 1.03, 1.02, 1.02, 1.02, 1.01, 1.01, 1.01, 1.01, 1.01, 1, 1, 1, 1, 1, 1,
  ],
  easeInOutBack: [
    0, 0, 0, 0, -0.01, -0.01, -0.02, -0.02, -0.03, -0.03, -0.04, -0.04, -0.05, -0.06, -0.06, -0.07, -0.07, -0.08, -0.08,
    -0.09, -0.09, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.09, -0.09, -0.08, -0.07, -0.06, -0.05, -0.03, -0.02, 0,
    0.02, 0.04, 0.06, 0.09, 0.12, 0.15, 0.18, 0.22, 0.26, 0.3, 0.35, 0.39, 0.45, 0.5, 0.55, 0.61, 0.65, 0.7, 0.74, 0.78,
    0.82, 0.85, 0.88, 0.91, 0.94, 0.96, 0.98, 1, 1.02, 1.03, 1.05, 1.06, 1.07, 1.08, 1.09, 1.09, 1.1, 1.1, 1.1, 1.1,
    1.1, 1.1, 1.1, 1.09, 1.09, 1.08, 1.08, 1.07, 1.07, 1.06, 1.06, 1.05, 1.04, 1.04, 1.03, 1.03, 1.02, 1.02, 1.01, 1.01,
    1, 1, 1, 1,
  ],
  elastic: [
    1, 1.17, 1.29, 1.38, 1.44, 1.46, 1.47, 1.45, 1.41, 1.37, 1.31, 1.26, 1.2, 1.15, 1.1, 1.06, 1.02, 0.99, 0.97, 0.95,
    0.94, 0.93, 0.93, 0.93, 0.93, 0.94, 0.95, 0.95, 0.96, 0.97, 0.98, 0.99, 0.99, 1, 1, 1.01, 1.01, 1.01, 1.01, 1.01,
    1.01, 1.01, 1.01, 1.01, 1.01, 1.01, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  swingFromTo: [
    0, 0, 0, 0, -0.01, -0.01, -0.02, -0.02, -0.03, -0.03, -0.04, -0.04, -0.05, -0.06, -0.06, -0.07, -0.07, -0.08, -0.08,
    -0.09, -0.09, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.09, -0.09, -0.08, -0.07, -0.06, -0.05, -0.03, -0.02, 0,
    0.02, 0.04, 0.06, 0.09, 0.12, 0.15, 0.18, 0.22, 0.26, 0.3, 0.35, 0.39, 0.45, 0.5, 0.55, 0.61, 0.65, 0.7, 0.74, 0.78,
    0.82, 0.85, 0.88, 0.91, 0.94, 0.96, 0.98, 1, 1.02, 1.03, 1.05, 1.06, 1.07, 1.08, 1.09, 1.09, 1.1, 1.1, 1.1, 1.1,
    1.1, 1.1, 1.1, 1.09, 1.09, 1.08, 1.08, 1.07, 1.07, 1.06, 1.06, 1.05, 1.04, 1.04, 1.03, 1.03, 1.02, 1.02, 1.01, 1.01,
    1, 1, 1, 1,
  ],
  swingFrom: [
    0, 0, 0, 0, 0, 0, -0.01, -0.01, -0.01, -0.01, -0.01, -0.02, -0.02, -0.02, -0.03, -0.03, -0.03, -0.04, -0.04, -0.04,
    -0.05, -0.05, -0.05, -0.06, -0.06, -0.06, -0.07, -0.07, -0.07, -0.08, -0.08, -0.08, -0.09, -0.09, -0.09, -0.09,
    -0.09, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.1, -0.09, -0.09, -0.09, -0.08, -0.08, -0.08,
    -0.07, -0.07, -0.06, -0.05, -0.05, -0.04, -0.03, -0.02, -0.01, 0, 0.01, 0.02, 0.04, 0.05, 0.06, 0.08, 0.09, 0.11,
    0.13, 0.14, 0.16, 0.18, 0.2, 0.22, 0.25, 0.27, 0.29, 0.32, 0.35, 0.37, 0.4, 0.43, 0.46, 0.49, 0.52, 0.56, 0.59,
    0.63, 0.66, 0.7, 0.74, 0.78, 0.82, 0.86, 0.91, 0.95, 1,
  ],
  swingTo: [
    0, 0.05, 0.09, 0.14, 0.18, 0.22, 0.26, 0.3, 0.34, 0.37, 0.41, 0.44, 0.48, 0.51, 0.54, 0.57, 0.6, 0.63, 0.65, 0.68,
    0.71, 0.73, 0.75, 0.78, 0.8, 0.82, 0.84, 0.86, 0.87, 0.89, 0.91, 0.92, 0.94, 0.95, 0.96, 0.98, 0.99, 1, 1.01, 1.02,
    1.03, 1.04, 1.05, 1.05, 1.06, 1.07, 1.07, 1.08, 1.08, 1.08, 1.09, 1.09, 1.09, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1, 1.1,
    1.1, 1.1, 1.1, 1.1, 1.09, 1.09, 1.09, 1.09, 1.09, 1.08, 1.08, 1.08, 1.07, 1.07, 1.07, 1.06, 1.06, 1.06, 1.05, 1.05,
    1.05, 1.04, 1.04, 1.04, 1.03, 1.03, 1.03, 1.02, 1.02, 1.02, 1.01, 1.01, 1.01, 1.01, 1.01, 1, 1, 1, 1, 1, 1,
  ],
  bounce: [
    0, 0, 0, 0.01, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08, 0.09, 0.11, 0.13, 0.15, 0.17, 0.19, 0.22, 0.25, 0.27, 0.3,
    0.33, 0.37, 0.4, 0.44, 0.47, 0.51, 0.55, 0.59, 0.64, 0.68, 0.73, 0.77, 0.82, 0.87, 0.93, 0.98, 0.98, 0.96, 0.93,
    0.91, 0.89, 0.87, 0.85, 0.83, 0.82, 0.81, 0.79, 0.78, 0.77, 0.77, 0.76, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.76,
    0.77, 0.77, 0.78, 0.79, 0.8, 0.82, 0.83, 0.85, 0.87, 0.89, 0.91, 0.93, 0.95, 0.98, 1, 0.98, 0.97, 0.96, 0.96, 0.95,
    0.94, 0.94, 0.94, 0.94, 0.94, 0.94, 0.95, 0.95, 0.96, 0.97, 0.98, 0.99, 1, 0.99, 0.99, 0.99, 0.98, 0.98, 0.99, 0.99,
    0.99, 1,
  ],
  bouncePast: [
    0, 0, 0, 0.01, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.08, 0.09, 0.11, 0.13, 0.15, 0.17, 0.19, 0.22, 0.25, 0.27, 0.3,
    0.33, 0.37, 0.4, 0.44, 0.47, 0.51, 0.55, 0.59, 0.64, 0.68, 0.73, 0.77, 0.82, 0.87, 0.93, 0.98, 1.02, 1.04, 1.07,
    1.09, 1.11, 1.13, 1.15, 1.17, 1.18, 1.19, 1.21, 1.22, 1.23, 1.23, 1.24, 1.25, 1.25, 1.25, 1.25, 1.25, 1.25, 1.24,
    1.23, 1.23, 1.22, 1.21, 1.2, 1.18, 1.17, 1.15, 1.13, 1.11, 1.09, 1.07, 1.05, 1.02, 1, 1.02, 1.03, 1.04, 1.04, 1.05,
    1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.05, 1.05, 1.04, 1.03, 1.02, 1.01, 1, 1.01, 1.01, 1.01, 1.02, 1.02, 1.01, 1.01,
    1.01, 1,
  ],
  easeFromTo: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.03, 0.04,
    0.04, 0.05, 0.06, 0.06, 0.07, 0.08, 0.09, 0.11, 0.12, 0.13, 0.15, 0.17, 0.19, 0.2, 0.23, 0.25, 0.27, 0.3, 0.33,
    0.36, 0.39, 0.42, 0.46, 0.5, 0.54, 0.58, 0.61, 0.64, 0.67, 0.7, 0.73, 0.75, 0.77, 0.8, 0.81, 0.83, 0.85, 0.87, 0.88,
    0.89, 0.91, 0.92, 0.93, 0.94, 0.94, 0.95, 0.96, 0.96, 0.97, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 0.99, 0.99, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  easeFrom: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01,
    0.01, 0.01, 0.02, 0.02, 0.02, 0.02, 0.02, 0.03, 0.03, 0.03, 0.03, 0.04, 0.04, 0.04, 0.05, 0.05, 0.06, 0.06, 0.07,
    0.07, 0.08, 0.09, 0.09, 0.1, 0.11, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.2, 0.21, 0.23, 0.24,
    0.25, 0.27, 0.28, 0.3, 0.32, 0.33, 0.35, 0.37, 0.39, 0.41, 0.43, 0.45, 0.47, 0.5, 0.52, 0.55, 0.57, 0.6, 0.63, 0.66,
    0.69, 0.72, 0.75, 0.78, 0.81, 0.85, 0.89, 0.92, 0.96, 1,
  ],
  easeTo: [
    0, 0.32, 0.38, 0.42, 0.45, 0.47, 0.49, 0.51, 0.53, 0.55, 0.56, 0.58, 0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.65, 0.66,
    0.67, 0.68, 0.68, 0.69, 0.7, 0.71, 0.71, 0.72, 0.73, 0.73, 0.74, 0.75, 0.75, 0.76, 0.76, 0.77, 0.77, 0.78, 0.79,
    0.79, 0.8, 0.8, 0.81, 0.81, 0.81, 0.82, 0.82, 0.83, 0.83, 0.84, 0.84, 0.85, 0.85, 0.85, 0.86, 0.86, 0.87, 0.87,
    0.87, 0.88, 0.88, 0.88, 0.89, 0.89, 0.89, 0.9, 0.9, 0.9, 0.91, 0.91, 0.91, 0.92, 0.92, 0.92, 0.93, 0.93, 0.93, 0.94,
    0.94, 0.94, 0.95, 0.95, 0.95, 0.95, 0.96, 0.96, 0.96, 0.97, 0.97, 0.97, 0.97, 0.98, 0.98, 0.98, 0.98, 0.99, 0.99,
    0.99, 0.99, 1, 1,
  ],
  linear: [
    0, 0.01, 0.02, 0.03, 0.04, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.11, 0.12, 0.13, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19,
    0.2, 0.21, 0.22, 0.23, 0.24, 0.25, 0.26, 0.27, 0.28, 0.29, 0.3, 0.31, 0.32, 0.33, 0.34, 0.35, 0.36, 0.37, 0.38,
    0.39, 0.4, 0.41, 0.42, 0.43, 0.44, 0.45, 0.46, 0.47, 0.48, 0.49, 0.5, 0.51, 0.52, 0.53, 0.54, 0.55, 0.56, 0.57,
    0.58, 0.59, 0.6, 0.61, 0.62, 0.63, 0.64, 0.65, 0.66, 0.67, 0.68, 0.69, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75, 0.76,
    0.77, 0.78, 0.79, 0.8, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.87, 0.88, 0.89, 0.9, 0.91, 0.92, 0.93, 0.94, 0.95,
    0.96, 0.97, 0.98, 0.99, 1,
  ],
  sinusoidal: [
    0, 0, 0, 0, 0, 0.01, 0.01, 0.01, 0.02, 0.02, 0.02, 0.03, 0.04, 0.04, 0.05, 0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.1,
    0.11, 0.12, 0.14, 0.15, 0.16, 0.17, 0.18, 0.19, 0.21, 0.22, 0.23, 0.25, 0.26, 0.27, 0.29, 0.3, 0.32, 0.33, 0.35,
    0.36, 0.38, 0.39, 0.41, 0.42, 0.44, 0.45, 0.47, 0.48, 0.5, 0.52, 0.53, 0.55, 0.56, 0.58, 0.59, 0.61, 0.62, 0.64,
    0.65, 0.67, 0.68, 0.7, 0.71, 0.73, 0.74, 0.75, 0.77, 0.78, 0.79, 0.81, 0.82, 0.83, 0.84, 0.85, 0.86, 0.88, 0.89,
    0.9, 0.9, 0.91, 0.92, 0.93, 0.94, 0.95, 0.95, 0.96, 0.96, 0.97, 0.98, 0.98, 0.98, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1,
  ],
  reverse: [
    1, 0.99, 0.98, 0.97, 0.96, 0.95, 0.94, 0.93, 0.92, 0.91, 0.9, 0.89, 0.88, 0.87, 0.86, 0.85, 0.84, 0.83, 0.82, 0.81,
    0.8, 0.79, 0.78, 0.77, 0.76, 0.75, 0.74, 0.73, 0.72, 0.71, 0.7, 0.69, 0.68, 0.67, 0.66, 0.65, 0.64, 0.63, 0.62,
    0.61, 0.6, 0.59, 0.58, 0.57, 0.56, 0.55, 0.54, 0.53, 0.52, 0.51, 0.5, 0.49, 0.48, 0.47, 0.46, 0.45, 0.44, 0.43,
    0.42, 0.41, 0.4, 0.39, 0.38, 0.37, 0.36, 0.35, 0.34, 0.33, 0.32, 0.31, 0.3, 0.29, 0.28, 0.27, 0.26, 0.25, 0.24,
    0.23, 0.22, 0.21, 0.2, 0.19, 0.18, 0.17, 0.16, 0.15, 0.14, 0.13, 0.12, 0.11, 0.1, 0.09, 0.08, 0.07, 0.06, 0.05,
    0.04, 0.03, 0.02, 0.01, 0,
  ],
  mirror: [
    0, 0, 0, 0.01, 0.02, 0.02, 0.04, 0.05, 0.06, 0.08, 0.1, 0.11, 0.14, 0.16, 0.18, 0.21, 0.23, 0.26, 0.29, 0.32, 0.35,
    0.38, 0.41, 0.44, 0.47, 0.5, 0.53, 0.56, 0.59, 0.62, 0.65, 0.68, 0.71, 0.74, 0.77, 0.79, 0.82, 0.84, 0.86, 0.89,
    0.9, 0.92, 0.94, 0.95, 0.96, 0.98, 0.98, 0.99, 1, 1, 1, 1, 1, 0.99, 0.98, 0.98, 0.96, 0.95, 0.94, 0.92, 0.9, 0.89,
    0.86, 0.84, 0.82, 0.79, 0.77, 0.74, 0.71, 0.68, 0.65, 0.62, 0.59, 0.56, 0.53, 0.5, 0.47, 0.44, 0.41, 0.38, 0.35,
    0.32, 0.29, 0.26, 0.23, 0.21, 0.18, 0.16, 0.14, 0.11, 0.1, 0.08, 0.06, 0.05, 0.04, 0.02, 0.02, 0.01, 0, 0, 0,
  ],
  flicker: [
    0, 0.01, 0, 0, 0, 0.04, 0, 0.02, 0.06, 0.01, 0, 0, 0.06, 0, 0.1, 0.05, 0.09, 0.03, 0.08, 0.12, 0.16, 0.07, 0.22,
    0.11, 0.17, 0.06, 0.23, 0.22, 0.2, 0.21, 0.22, 0.13, 0.32, 0.36, 0.33, 0.19, 0.16, 0.38, 0.19, 0.45, 0.33, 0.35,
    0.3, 0.47, 0.51, 0.39, 0.45, 0.44, 0.33, 0.37, 0.65, 0.56, 0.6, 0.67, 0.61, 0.54, 0.59, 0.74, 0.55, 0.53, 0.59,
    0.74, 0.57, 0.83, 0.68, 0.63, 0.65, 0.7, 0.76, 0.74, 0.68, 0.75, 0.84, 0.9, 0.85, 0.87, 0.87, 0.77, 0.83, 0.84,
    0.94, 0.93, 0.89, 0.9, 0.85, 0.91, 0.92, 0.98, 0.95, 0.99, 0.94, 0.97, 1, 1, 0.97, 1, 1, 1, 1, 1, 0.99,
  ],
  wobble: [
    0, 0, 0, 0, 0, 0, 0, 0, 0.01, 0.01, 0.02, 0.03, 0.04, 0.06, 0.07, 0.1, 0.13, 0.16, 0.2, 0.24, 0.29, 0.34, 0.4, 0.46,
    0.53, 0.6, 0.67, 0.74, 0.8, 0.86, 0.91, 0.96, 0.98, 1, 1, 0.97, 0.93, 0.87, 0.79, 0.7, 0.59, 0.48, 0.36, 0.25, 0.15,
    0.08, 0.02, 0, 0.01, 0.06, 0.15, 0.26, 0.4, 0.54, 0.69, 0.82, 0.92, 0.99, 1, 0.96, 0.86, 0.73, 0.56, 0.39, 0.22,
    0.09, 0.02, 0, 0.06, 0.19, 0.36, 0.56, 0.75, 0.9, 0.99, 0.99, 0.91, 0.75, 0.54, 0.32, 0.14, 0.02, 0.01, 0.1, 0.27,
    0.5, 0.74, 0.92, 1, 0.96, 0.81, 0.57, 0.32, 0.11, 0.01, 0.04, 0.2, 0.45, 0.72, 0.92, 1,
  ],
  pulse: [
    0, 0.02, 0.08, 0.17, 0.29, 0.42, 0.56, 0.7, 0.82, 0.91, 0.98, 1, 0.98, 0.93, 0.84, 0.73, 0.59, 0.45, 0.32, 0.19,
    0.1, 0.03, 0, 0.01, 0.06, 0.15, 0.26, 0.39, 0.53, 0.67, 0.79, 0.9, 0.96, 1, 0.99, 0.95, 0.86, 0.75, 0.62, 0.48,
    0.35, 0.22, 0.11, 0.04, 0, 0.01, 0.05, 0.12, 0.23, 0.36, 0.5, 0.64, 0.77, 0.88, 0.95, 0.99, 1, 0.96, 0.89, 0.78,
    0.65, 0.52, 0.38, 0.25, 0.14, 0.05, 0.01, 0, 0.04, 0.1, 0.21, 0.33, 0.47, 0.61, 0.74, 0.85, 0.94, 0.99, 1, 0.97,
    0.9, 0.81, 0.68, 0.55, 0.41, 0.27, 0.16, 0.07, 0.02, 0, 0.02, 0.09, 0.18, 0.3, 0.44, 0.58, 0.71, 0.83, 0.92, 0.98,
    1,
  ],
  blink: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  spring: [
    0, 0.07, 0.15, 0.24, 0.34, 0.44, 0.54, 0.64, 0.74, 0.83, 0.91, 0.99, 1.06, 1.12, 1.17, 1.21, 1.24, 1.27, 1.28, 1.29,
    1.29, 1.28, 1.27, 1.25, 1.23, 1.21, 1.18, 1.15, 1.13, 1.1, 1.08, 1.05, 1.03, 1.01, 0.99, 0.97, 0.96, 0.95, 0.94,
    0.93, 0.93, 0.92, 0.92, 0.93, 0.93, 0.93, 0.94, 0.94, 0.95, 0.96, 0.96, 0.97, 0.98, 0.99, 0.99, 1, 1, 1.01, 1.01,
    1.01, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 1.02, 1.01, 1.01, 1.01, 1.01, 1.01, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 0.99, 0.99, 0.99, 0.99, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
  none: [
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  ],
  full: [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  ],
};
// generate an array of tween;
// eslint-disable-next-line @typescript-eslint/no-unused-vars
// function generateDotsOfTween(step = 0.01, fix = 2) {
//   const funArr = Object.keys(tween);
//   const obj: Record<string, number[]> = {};
//   for (const funName of funArr) {
//     obj[funName] = [];
//     for (let index = 0; index <= 1; index = +(index + step).toFixed(7)) {
//       console.log(index);
//       // tween[funName as keyof typeof tween](index);
//       obj[funName].push(+tween[funName as keyof typeof tween](index).toFixed(fix));
//     }
//   }

//   return obj;
// }

// console.log('dots arr', generateDotsOfTween());
